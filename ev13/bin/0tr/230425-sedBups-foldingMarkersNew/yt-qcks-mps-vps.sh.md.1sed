_____________  yt-dlp / youtube-dl  quickies/short-nts for both audio+video ___________________________________
-!! see also dnts-DIR and also hier mpxxx.sh scripts for more nts !! so  /up1/w/docs_m/dres/devnts/lxOSs/utils-lx/  and cdbin !

	_______:  examples for all in    https://github.com/yt-dlp/yt-dlp    /OR in man yt-dlp :
	-!! examples for FORMATS   in man yt-dlp  /^\s*FORMAT SELECTION  bzw.  /^\s*Format Selection examples ! bzw. https://github.com/yt-dlp/yt-dlp#format-selection-examples !
	-!! examples for OUTPUT-filenames/TEMPLATES  in man yt-dlp  /Output template examples  bzw.  /Modifying metadata examples
________________________________________  ___________________________


#####  ==========  FORMATS-selections (video,audios,container,....) of yt-dlp : -----------------------------
	-!! examples for FORMATS   in man yt-dlp  /^\s*FORMAT SELECTION  bzw.  /^\s*Format Selection examples ! bzw. https://github.com/yt-dlp/yt-dlp#format-selection-examples !

	_______:  listing all available formats/sizes/... (-F) : yt-dlp  -F --simulate   https://www.youtube.com/watch?v=1abfAoBvDPo
	use -f - to interactively provide the format selector for each video

	_______:  FORMATS-Selctor-abbrev./signs  used by  yt-dlp  (as best/worst/bv*/wa*/...):
	- see  man  yt-dlp  /^\s*FORMAT SELECTION  for the abbrev-listing! eg:
	- eg:  b == best , w == worst ,  bv/wv == best/worstvideo , ba/wa == best/worstaudio , br/wr == best/worst-resolution (highest) , ...
	"/" is OR--selector ! so download x-or-y in this sequence  -f x/y  ! as yt-dlp -f "bv+ba/b" (== -f bestvideo+bestaudio/best ) : Download and merge the best video-only format and the best audio-only format, or download the best combined format if video-only format is not available
	"," is AND-selector (as separate files, no-merging)! so download x-and-y both  -f x,y as:  -f "bv,ba"  :Download the best video-only format and the best audio-only format without merging them
	"+" : merge them after downloading then into one file/container ! so:
		yt-dlp -f "bv,ba" : bestvideo + bestaudio DW without merging them together! but:  -f "bv+ba" : same but merge them together in one container-file!
		yt-dlp -f "bv*+ba+ba.2" --audio-multistreams  #: Download and merge the best format that has a video stream, and the best 2 audio-only formats into one file
		yt-dlp -f "bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b"   :  Download the best mp4 video available, or the best video if no mp4 available
	"*" : contains at least (so: bv means best-video-ONLY-file(without-audio-part), but bv* means best-video-file-mit-or-without-audio-in-it), as: -f "bv*+ba"  : Download best format that CONTAINS video, and if it doesn't already have an audio stream, merge it with best audio-only format. compare with:
	"[...]" : conditions , see man /^\s*Filtering Formats !  yt-dlp -f "bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b"  # Download the best mp4 video available, or the best video if no mp4 available
	- b*, best*: Select the best quality format that contains either a video or an audio or both (ie; vcodec!=none or acodec!=none)
	- b, best: Select the best quality format that contains both video and audio.  Equivalent to best*[vcodec!=none][acodec!=none]
	- ... see there in manpage!

	_______:  FORMATS-Selctor-NEW/-recommeded:  -S, --format-sort <SORTORDER> ,  see also  man /^\s*Sorting Formats for details:
	-S : change the  criteria  for  being  considered  the  "best" Format-selctor, as:
	"+" :  "-S +XXX" reverse the sort-/prefer-order ! the default-sort-order is descending ! for ascending prefix it with a "+", as :  "-S +res" : prefers format with the lowest resolution. wheras "-S res" : prefers format with the highest resolution !
	":" : suffix schränkt ein(Bedingung): eg: -S res:720 prefers larger videos,  but no larger than 720p and the smallest video if there are no videos less than 720p
	-S  res:xxx  : resolution bezieht sich auf die kleinere Seite / smallest dimension; so eg bei 1280x720 , dann ist die Seite mit 720 gemeint !
	yt-dlp -S "+size,+br"  # Download the smallest video available (also smallest resolution); without "+" then largest !
	yt-dlp -S "+res"       # Download the best video available but with the smallest resolution ;  without "+" then highest resolution !
	yt-dlp -S "res:480"    # Download the best video available with the largest resolution but no better than 480p (1kk: smaller Side), # or the best video with the smallest resolution if there is no video under 480p # Resolution is determined by using the smallest dimension.  # So this works correctly for vertical videos as well
	yt-dlp -S "res:720"    # prefers larger videos,  but no larger than 720p and the smallest video if there are no videos less than 720p.
	yt-dlp -S "ext"        # Download the best video with the best extension # (For video, mp4 > mov > webm > flv. For audio, m4a > aac > mp3 ...)
	yt-dlp -S "height:480" # Download the best video available with the largest height but no better than 480p, # or the best video with the smallest resolution if there is no video under 480p
	---> 1kk: so basically use: -S "res:480"  /OR  -f "b" -S "filesize~50M"
	--- new-old-selectors-compares-eg:
	yt-dlp -f "b[filesize<50M] / w"  ==  yt-dlp -f "b" -S "filesize:50M"  ### Download largest video (that also has audio) but no bigger than 50 MB, # or the smallest video (that also has audio) if there is no video under 50 MB
	yt-dlp -f "wv*+wa/w"  ~==  yt-dlp -S "+size,+br"  # Download the smallest video available

	_______:  FORMATS-Selctor-older-with:  -f, --format <FORMAT> (prev/older selector) ,  :  for formatts of DWs see : man  yt-dlp  /^\s*FORMAT SELECTION ; eg:
	!! ses examples manpage "Format Selection examples" /OR in https://github.com/yt-dlp/yt-dlp#format-selection-examples
	-! Download the best mp4 video available, or the best video if no mp4 available $ yt-dlp -f "bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b"
	-! Download the best video (that also has audio) but no bigger than 50 MB, # or the worst video (that also has audio) if there is no video under 50 MB $ yt-dlp -f "b[filesize<50M] / w"
	- default FORMAT DW of yt-dlp is :  -f  bestvideo*+bestaudio/best == -f "bv*+ba/b" (see more in man /FORMAT SELECTION ) , so:
		Download best format that contains video, and if it doesn't already have an audio stream, merge it with best audio-only format 
		However,  if multiple audiostreams is enabled (--audio-multistreams), the default format changes to -f bestvideo+bestau‐ dio/best.
		(earlier youtube-dl was without "*", so: -f bestvideo+bestaudio/best bzw. == -f "bv+ba/b" ), so:  Download and merge the best video-only format and the best audio-only format, or download the best combined format if video-only format is not available
	yt-dlp -f 22  ##--download the format with format code equal to 22 ; codes-listing with -F bzw. --list-formats
	-f webm will download the best quality format with the webm extension  ##-  file extension (currently 3gp, aac, flv, m4a, mp3, mp4, ogg, wav, webm are supported) 
- "OUTPUT TEMPLATE"  dor filenames-output with -o <my-template> ! check there! see "Output template examples" in manp !
________________________________________  ___________________________


#####  ==========  coll params useful with older-format-selector "-f" :
-! see also new-style of formats-selectors is  "-S ..."  (old-style [...]) as in:  yt-dlp -f "b[filesize<50M] / w"  ==new-style:  yt-dlp -f "b" -S "filesize:50M"
--max-filesize SIZE             Abort download if filesize is larger than SIZE, e.g. 50k or 44.6M
--date DATE                     Download only videos uploaded on this date.
--datebefore DATE               Download only videos uploaded on or before this date.
--dateafter DATE                Download only videos uploaded on or after this date. The date formats accepted is the same as --date
--age-limit YEARS               Download only videos suitable for the given age
--match-filters FILTER 		: search/DW only certain videos matching the filter! see man!
--no-playlist                   Download only the video, if the URL refers to a video and a playlist
--prefer-free-formats        : see "Video Format Options:" in man yt-dlp ! and also "FORMAT SELECTION" there !
--########################## videos-trys/nts with youtube-dl : ########################################
________________________________________  ___________________________


#####  ==========  testing/trying to dw audio-extractions without dwonloading their videos , success?? /_190100 :
d7-Dir   d7-Surviver--Eye-of-the-tiger--videoGreat/ $
youtube-dl -k -f worstvideo+bestaudio  --keep-fragments  --geo-bypass  -wc  --audio-quality 320k --extract-audio   --audio-format mp3   --all-subs   --write-auto-sub  --write-description  --write-annotations  --write-info-json     https://music.youtube.com/watch?v=btPJPFnesV4
d2-Dir  : with -k keep ...
youtube-dl -k -f worstvideo+bestaudio  --keep-fragments  --geo-bypass  -wc  --audio-quality 0 --extract-audio   --audio-format mp3     https://music.youtube.com/watch?v=ffk4rot0XF4
d1-Dir  :
youtube-dl  -f worstvideo+bestaudio  --keep-fragments  --geo-bypass  -wc  --audio-quality 0 --extract-audio   --audio-format mp3     https://music.youtube.com/watch?v=ffk4rot0XF4
________________________________________  ___________________________


#####  ==========  youtube-dl / youtube-DWs,... : ---> see also yt-dnts and hier also yt-scripts for main nts!! /up1/w/docs_m/dres/devnts/lxOSs/utils_audioVideo_apps_SWs_lx/ , /up1/.cuue/bin/*yt* , .... :
	- help / all-params-listing:   youtube-dl --help
	- downloading whole-user OR whole-PlayList have got same syntax, just with different youtube-URLs
	- searchWord--partly-dw of user-videos (eg: download ONLY widows whose TITLE contains the word balboa) : youtube-dl  --match-title balboa  http://www.youtube.com/user/SimonAndTash     ##--I- so basically the result must be the same as:  http://www.youtube.com/user/SimonAndTash/search?query=balboa
	- Only-Filenames-simulation (generate ONLY the LOCAL-filesnames based on "-o"-param, WITHOUT downloading anything:   youtube-dl  --get-filename -o "...."   <URL1>
	- update: ONLY-NEWER-than-date-XX downloading:   youtube-dl --dateafter YYYYMMDD   ##eg: youtube-dl --dateafter 20110601  -iw -o '%(stitle)s__%(uploader)s__%(id)s.%(ext)s' http://www.youtube.com/user/CrimsonGardenia
	- update-Simulation: ONLY-NEWER-than-date-XX but ONLY-loacal-filenames-generation WITHOUT downloading:   youtube-dl --dateafter 20110601  --get-filename  -iw -o '%(stitle)s__%(uploader)s__%(id)s.%(ext)s' http://www.youtube.com/user/CrimsonGardenia
	- alias youtubedw1='youtube-dl  -icw  --restrict-filenames  -o "%(title)s__%(uploader)s__%(id)s.%(ext)s"  <URL1> 
	--- prev-120101:
		- plalists with youtube-dl: must change the URL into the oldstyle: http://www.youtube.com/playlist?list=PL8C85996573D7888E   into: http://www.youtube.com/view_play_list?p=8C85996573D7888E (alsp "PL" rausnehmen von playlist.link, und view_play_list?p=....)
		- alias youtubedw1='youtube-dl -iwb -o '\''%(stitle)s_%(uploader)s_%(id)s.%(ext)s'\'' '
		- alias youtubedws='youtube-dl -iwb -o '\''%(stitle)s_%(uploader)s_%(id)s.%(ext)s'\'' -a links_*_YT.txt'  ##- url-listing in file links_xxxxx.txt
________________________________________  ___________________________

